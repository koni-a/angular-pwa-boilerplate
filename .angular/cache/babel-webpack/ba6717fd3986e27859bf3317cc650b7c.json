{"ast":null,"code":"import _classCallCheck from \"C:/PR/PWABoilerplate/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/PR/PWABoilerplate/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport var DataService = /*#__PURE__*/function () {\n  function DataService(httpClient) {\n    _classCallCheck(this, DataService);\n\n    this.httpClient = httpClient;\n  }\n  /**\r\n   * Randomly returns daddy jokes from: https://icanhazdadjoke.com\r\n   */\n\n\n  _createClass(DataService, [{\n    key: \"getJoke\",\n    value: function getJoke() {\n      var headers = new HttpHeaders().set('Accept', 'application/json');\n      return this.httpClient.get('https://icanhazdadjoke.com', {\n        headers: headers\n      });\n    }\n    /**\r\n     * Returns random cats photos\r\n     */\n\n  }, {\n    key: \"getCats\",\n    value: function getCats() {\n      return this.httpClient.get('https://api.thecatapi.com/v1/images/search');\n    }\n  }]);\n\n  return DataService;\n}();\n\nDataService.ɵfac = function DataService_Factory(t) {\n  return new (t || DataService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nDataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DataService,\n  factory: DataService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:/PR/PWABoilerplate/src/app/services/data.service.ts"],"names":["HttpClient","HttpHeaders","i0","i1","DataService","httpClient","headers","set","get","ɵfac","DataService_Factory","t","ɵɵinject","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":";;AAAA,SAASA,UAAT,EAAqBC,WAArB,QAAwC,sBAAxC;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,sBAApB;AACA,WAAaC,WAAb;AACI,uBAAYC,UAAZ,EAAwB;AAAA;;AACpB,SAAKA,UAAL,GAAkBA,UAAlB;AACH;AACD;AACJ;AACA;;;AANA;AAAA;AAAA,WAOI,mBAAU;AACN,UAAMC,OAAO,GAAG,IAAIL,WAAJ,GAAkBM,GAAlB,CAAsB,QAAtB,EAAgC,kBAAhC,CAAhB;AACA,aAAO,KAAKF,UAAL,CAAgBG,GAAhB,CAAoB,4BAApB,EAAkD;AAAEF,QAAAA,OAAO,EAAPA;AAAF,OAAlD,CAAP;AACH;AACD;AACJ;AACA;;AAbA;AAAA;AAAA,WAcI,mBAAU;AACN,aAAO,KAAKD,UAAL,CAAgBG,GAAhB,CAAoB,4CAApB,CAAP;AACH;AAhBL;;AAAA;AAAA;;AAkBAJ,WAAW,CAACK,IAAZ,GAAmB,SAASC,mBAAT,CAA6BC,CAA7B,EAAgC;AAAE,SAAO,KAAKA,CAAC,IAAIP,WAAV,EAAuBF,EAAE,CAACU,QAAH,CAAYT,EAAE,CAACH,UAAf,CAAvB,CAAP;AAA4D,CAAjH;;AACAI,WAAW,CAACS,KAAZ,GAAoB,aAAcX,EAAE,CAACY,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAEX,WAAT;AAAsBY,EAAAA,OAAO,EAAEZ,WAAW,CAACK,IAA3C;AAAiDQ,EAAAA,UAAU,EAAE;AAA7D,CAAtB,CAAlC","sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/common/http\";\r\nexport class DataService {\r\n    constructor(httpClient) {\r\n        this.httpClient = httpClient;\r\n    }\r\n    /**\r\n     * Randomly returns daddy jokes from: https://icanhazdadjoke.com\r\n     */\r\n    getJoke() {\r\n        const headers = new HttpHeaders().set('Accept', 'application/json');\r\n        return this.httpClient.get('https://icanhazdadjoke.com', { headers });\r\n    }\r\n    /**\r\n     * Returns random cats photos\r\n     */\r\n    getCats() {\r\n        return this.httpClient.get('https://api.thecatapi.com/v1/images/search');\r\n    }\r\n}\r\nDataService.ɵfac = function DataService_Factory(t) { return new (t || DataService)(i0.ɵɵinject(i1.HttpClient)); };\r\nDataService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: DataService, factory: DataService.ɵfac, providedIn: 'root' });\r\n"]},"metadata":{},"sourceType":"module"}